{"version":3,"mappings":"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","names":["AuthService","_httpClient","credentials","identification","password","_angular_core__WEBPACK_IMPORTED_MODULE_0__","factory","providedIn","_angular_core__WEBPACK_IMPORTED_MODULE_1__","MyErrorStateMatcher","control","form","isSubmitted","submitted","invalid","dirty","touched","types","LoginComponent","formBuilder","_authService","toastr","router","className","centerMode","infinite","centerPadding","slidesToShow","speed","dots","options","toastrConfig","loginForm","createLoginFormGroup","group","value","disabled","_angular_forms__WEBPACK_IMPORTED_MODULE_2__","openToast","login","navigate","isCorrect","message","title","opt","inserted","show","iconClasses","selectors","decls","vars","consts","template","_r2","ctx","LoginModule","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_angular_router__WEBPACK_IMPORTED_MODULE_5__","_login_routing__WEBPACK_IMPORTED_MODULE_0__","src_app_shared_shared_module__WEBPACK_IMPORTED_MODULE_1__","declarations","_login_component__WEBPACK_IMPORTED_MODULE_2__","imports","loginRoutes","path","component","_login_component__WEBPACK_IMPORTED_MODULE_0__"],"sources":["webpack:///src/app/core/auth/auth.service.ts","webpack:///src/app/modules/auth/login/login.component.html","webpack:///src/app/modules/auth/login/login.component.ts","webpack:///src/app/modules/auth/login/login.module.ts","webpack:///src/app/modules/auth/login/login.routing.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { environment } from \"src/environments/environment\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthService {\n  constructor(private _httpClient: HttpClient) {}\n\n  login(credentials: { identification: string; password: string }): boolean {\n    // Throw error, if the user is already logged in\n\n    if (\n      credentials.identification === \"1250599436\" &&\n      credentials.password === \"12345\"\n    ) {\n      return true;\n    }\n    return false;\n  }\n}\n","<div class=\"h-100\">\n  <div class=\"row h-100 g-0\">\n    <div class=\"d-none d-lg-block col-lg-4\">\n      <div class=\"slider-light\">\n        <ngx-slick-carousel\n          class=\"slick-slider slick-dotted\"\n          #slickModal=\"slick-carousel\"\n          [config]=\"slideConfig2\"\n        >\n          <div ngxSlickItem>\n            <div\n              class=\"position-relative h-100 d-flex justify-content-center align-items-center bg-light\"\n            >\n              <div class=\"slide-img-bg\"></div>\n              <div class=\"slider-content margin-content-carrousel text-light\">\n                <img\n                  class=\"img-carrousel\"\n                  alt=\"img carrousel\"\n                  src=\"/assets/images/carrousels/seguro-de-vida-del-ecuador-para-ti-y-tu-familia.webp\"\n                />\n                <h3 class=\"text-start text-primary py-2\">\n                  En Seguros del Pichincha\n                  <strong>buscamos la excelencia</strong> a través de un equipo\n                  humano de grandes valores.\n                </h3>\n              </div>\n            </div>\n          </div>\n          <div ngxSlickItem>\n            <div\n              class=\"position-relative h-100 d-flex justify-content-center align-items-center bg-light\"\n            >\n              <div class=\"slide-img-bg\"></div>\n              <div class=\"slider-content margin-content-carrousel text-light\">\n                <img\n                  class=\"img-carrousel\"\n                  alt=\"img carrousel\"\n                  src=\"/assets/images/carrousels/tranquilo.webp\"\n                />\n                <h3 class=\"text-start text-primary py-2\">\n                  ¡Protege la tranquilidad de tus colaboradores con los\n                  <strong>lideres en Seguros de vida del Ecuador!</strong>\n                </h3>\n              </div>\n            </div>\n          </div>\n        </ngx-slick-carousel>\n      </div>\n    </div>\n    <div\n      class=\"h-100 d-flex bg-white justify-content-center align-items-center col-md-12 col-lg-8\"\n    >\n      <div class=\"mx-auto app-login-box col-sm-12 col-md-10 col-lg-9\">\n        <form [formGroup]=\"loginForm\" class=\"col-lg-6 offset-lg-3\">\n          <div class=\"row\">\n            <div class=\"col-md-12 text-center\">\n              <img\n                class=\"logo-seguro-size\"\n                alt=\"Logo Seguro\"\n                src=\"/assets/images/logo_pichincha.png\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-12 text-center\">\n              <mat-form-field class=\"w-100\" appearance=\"outline\">\n                <mat-label>Identificación</mat-label>\n                <input\n                  matInput\n                  placeholder=\"Identificación\"\n                  formControlName=\"identification\"\n                />\n                <mat-error\n                  *ngIf=\"loginForm.get('identification').hasError('required')\"\n                >\n                  Campo <strong>obligatorio.</strong>\n                </mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-md-12 text-center\">\n              <mat-form-field class=\"w-100\" appearance=\"outline\">\n                <mat-label>Contraseña</mat-label>\n                <input\n                  matInput\n                  placeholder=\"Contraseña\"\n                  formControlName=\"password\"\n                  type=\"password\"\n                  #passwordField\n                />\n\n                <button\n                  mat-button\n                  matSuffix\n                  mat-icon-button\n                  class=\"mb-0 me-0 border-0 btn-transition btn btn-outline-primary\"\n                  type=\"button\"\n                  (click)=\"\n                    passwordField.type === 'password'\n                      ? (passwordField.type = 'text')\n                      : (passwordField.type = 'password')\n                  \"\n                >\n                  <mat-icon *ngIf=\"passwordField.type === 'password'\" matSuffix\n                    >visibility_off</mat-icon\n                  >\n\n                  <mat-icon *ngIf=\"passwordField.type === 'text'\" matSuffix\n                    >visibility</mat-icon\n                  >\n                </button>\n\n                <mat-error\n                  *ngIf=\"loginForm.get('password').hasError('required')\"\n                >\n                  Campo <strong>obligatorio.</strong>\n                </mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-12 text-center\">\n              <div class=\"ms-auto\">\n                <a [routerLink]=\"\" class=\"fw-normal btn-lg btn btn-link\"\n                  >¿Olvidaste tu contraseña?</a\n                >\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div class=\"checkbox\">\n                <label class=\"form-label\">\n                  <input type=\"checkbox\" [checked]=\"null\" (change)=\"(null)\" />\n                  Mantenme <strong>conectado</strong>\n                </label>\n              </div>\n            </div>\n          </div>\n          <div class=\"d-grid gap-2\">\n            <button\n              [disabled]=\"loginForm.invalid\"\n              (click)=\"signIn()\"\n              mat-raised-button\n              class=\"btn-shadow\"\n              color=\"primary\"\n            >\n              Iniciar Sesión\n            </button>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-12 text-center\">\n              <div class=\"ms-auto\">\n                <h6 class=\"mb-0 py-2\">\n                  ¿No tienes una cuenta?\n                  <a [routerLink]=\"\" class=\"text-primary\">REGISTRATE</a>\n                </h6>\n              </div>\n            </div>\n          </div>\n          <div class=\"row pt-4\">\n            <div class=\"class-md-12 text-center\">\n              <div\n                class=\"input-group justify-content-center align-items-center gap-4\"\n              >\n                <label class=\"\"> Iniciar sesión con: </label>\n                <button\n                  class=\"input-group-addonmb-2 me-2 btn-icon btn-shadow btn-outline-2x btn btn-outline-info border-0\"\n                >\n                  <i class=\"fa fa-windows btn-icon-wrapper\"> </i>Active\n                  Directory\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  FormGroupDirective,\n  NgForm,\n  Validators,\n} from \"@angular/forms\";\nimport { ErrorStateMatcher } from \"@angular/material/core\";\nimport { GlobalConfig, ToastrService } from \"ngx-toastr\";\nimport { cloneDeep, random } from \"lodash-es\";\nimport { AuthService } from \"src/app/core/auth/auth.service\";\nimport { Router } from \"@angular/router\";\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(\n    control: FormControl | null,\n    form: FormGroupDirective | NgForm | null\n  ): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(\n      control &&\n      control.invalid &&\n      (control.dirty || control.touched || isSubmitted)\n    );\n  }\n}\n\nconst types = [\"success\", \"error\", \"info\", \"warning\"];\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.scss\"],\n})\nexport class LoginComponent implements OnInit {\n  slideConfig2 = {\n    className: \"center\",\n    centerMode: true,\n    infinite: true,\n    centerPadding: \"0\",\n    slidesToShow: 1,\n    speed: 500,\n    dots: true,\n  };\n\n  loginForm: FormGroup;\n\n  matcher = new MyErrorStateMatcher();\n\n  options: GlobalConfig;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private _authService: AuthService,\n    public toastr: ToastrService,\n    private router: Router\n  ) {\n    this.options = this.toastr.toastrConfig;\n  }\n\n  ngOnInit() {\n    this.loginForm = this.createLoginFormGroup();\n  }\n\n  createLoginFormGroup(): FormGroup {\n    return this.formBuilder.group({\n      identification: [{ value: \"\", disabled: false }, [Validators.required]],\n      password: [{ value: \"\", disabled: false }, [Validators.required]],\n    });\n  }\n\n  signIn(): void {\n    if (!this.loginForm.invalid) {\n      this.openToast(this._authService.login(this.loginForm.value));\n\n      if (this._authService.login(this.loginForm.value)) {\n        this.router.navigate([\"/siniestros\"]);\n      }\n    }\n  }\n\n  openToast(isCorrect: boolean) {\n    const { message, title } = {\n      message: isCorrect\n        ? \"Transacción Exitosa\"\n        : \"Usuario o Contraseña Incorrectos\",\n      title: isCorrect ? \"success\" : \"error\",\n    };\n    // Clone current config so it doesn't change when ngModel updates\n    const opt = cloneDeep(this.options);\n    const inserted = this.toastr.show(\n      message,\n      title,\n      opt,\n      this.options.iconClasses[isCorrect ? \"success\" : \"error\"]\n    );\n\n    return inserted;\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { RouterModule } from \"@angular/router\";\nimport { loginRoutes } from \"./login.routing\";\nimport { SharedModule } from \"src/app/shared/shared.module\";\nimport { LoginComponent } from \"./login.component\";\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [CommonModule, RouterModule.forChild(loginRoutes), SharedModule],\n})\nexport class LoginModule {}\n","import { Route } from \"@angular/router\";\r\nimport { LoginComponent } from \"./login.component\";\r\n\r\nexport const loginRoutes: Route[] = [\r\n  {\r\n    path: \"\",\r\n    component: LoginComponent,\r\n  },\r\n];\r\n"]}