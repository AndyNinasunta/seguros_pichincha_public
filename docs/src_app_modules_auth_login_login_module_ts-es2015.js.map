{"version":3,"file":"src_app_modules_auth_login_login_module_ts-es2015.js","mappings":"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","sources":["./src/app/core/auth/auth.service.ts","./src/app/modules/auth/login/login.component.ts","./src/app/modules/auth/login/login.component.html","./src/app/modules/auth/login/login.module.ts","./src/app/modules/auth/login/login.routing.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { environment } from \"src/environments/environment\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthService {\n  constructor(private _httpClient: HttpClient) {}\n\n  login(credentials: { identification: string; password: string }): boolean {\n    // Throw error, if the user is already logged in\n\n    if (\n      credentials.identification === \"1250599436\" &&\n      credentials.password === \"12345\"\n    ) {\n      return true;\n    }\n    return false;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  FormGroupDirective,\n  NgForm,\n  Validators,\n} from \"@angular/forms\";\nimport { ErrorStateMatcher } from \"@angular/material/core\";\nimport { GlobalConfig, ToastrService } from \"ngx-toastr\";\nimport { cloneDeep, random } from \"lodash-es\";\nimport { AuthService } from \"src/app/core/auth/auth.service\";\nimport { Router } from \"@angular/router\";\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(\n    control: FormControl | null,\n    form: FormGroupDirective | NgForm | null\n  ): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(\n      control &&\n      control.invalid &&\n      (control.dirty || control.touched || isSubmitted)\n    );\n  }\n}\n\nconst types = [\"success\", \"error\", \"info\", \"warning\"];\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.scss\"],\n})\nexport class LoginComponent implements OnInit {\n  slideConfig2 = {\n    className: \"center\",\n    centerMode: true,\n    infinite: true,\n    centerPadding: \"0\",\n    slidesToShow: 1,\n    speed: 500,\n    dots: true,\n  };\n\n  loginForm: FormGroup;\n\n  matcher = new MyErrorStateMatcher();\n\n  options: GlobalConfig;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private _authService: AuthService,\n    public toastr: ToastrService,\n    private router: Router\n  ) {\n    this.options = this.toastr.toastrConfig;\n  }\n\n  ngOnInit() {\n    this.loginForm = this.createLoginFormGroup();\n  }\n\n  createLoginFormGroup(): FormGroup {\n    return this.formBuilder.group({\n      identification: [{ value: \"\", disabled: false }, [Validators.required]],\n      password: [{ value: \"\", disabled: false }, [Validators.required]],\n    });\n  }\n\n  signIn(): void {\n    if (!this.loginForm.invalid) {\n      this.openToast(this._authService.login(this.loginForm.value));\n\n      if (this._authService.login(this.loginForm.value)) {\n        this.router.navigate([\"/siniestros\"]);\n      }\n    }\n  }\n\n  openToast(isCorrect: boolean) {\n    const { message, title } = {\n      message: isCorrect\n        ? \"Transacción Exitosa\"\n        : \"Usuario o Contraseña Incorrectos\",\n      title: isCorrect ? \"success\" : \"error\",\n    };\n    // Clone current config so it doesn't change when ngModel updates\n    const opt = cloneDeep(this.options);\n    const inserted = this.toastr.show(\n      message,\n      title,\n      opt,\n      this.options.iconClasses[isCorrect ? \"success\" : \"error\"]\n    );\n\n    return inserted;\n  }\n}\n","<div class=\"h-100\">\n  <div class=\"row h-100 g-0\">\n    <div class=\"d-none d-lg-block col-lg-4\">\n      <div class=\"slider-light\">\n        <ngx-slick-carousel\n          class=\"slick-slider slick-dotted\"\n          #slickModal=\"slick-carousel\"\n          [config]=\"slideConfig2\"\n        >\n          <div ngxSlickItem>\n            <div\n              class=\"position-relative h-100 d-flex justify-content-center align-items-center bg-light\"\n            >\n              <div class=\"slide-img-bg\"></div>\n              <div class=\"slider-content margin-content-carrousel text-light\">\n                <img\n                  class=\"img-carrousel\"\n                  alt=\"img carrousel\"\n                  src=\"/assets/images/carrousels/seguro-de-vida-del-ecuador-para-ti-y-tu-familia.webp\"\n                />\n                <h3 class=\"text-start text-primary py-2\">\n                  En Seguros del Pichincha\n                  <strong>buscamos la excelencia</strong> a través de un equipo\n                  humano de grandes valores.\n                </h3>\n              </div>\n            </div>\n          </div>\n          <div ngxSlickItem>\n            <div\n              class=\"position-relative h-100 d-flex justify-content-center align-items-center bg-light\"\n            >\n              <div class=\"slide-img-bg\"></div>\n              <div class=\"slider-content margin-content-carrousel text-light\">\n                <img\n                  class=\"img-carrousel\"\n                  alt=\"img carrousel\"\n                  src=\"/assets/images/carrousels/tranquilo.webp\"\n                />\n                <h3 class=\"text-start text-primary py-2\">\n                  ¡Protege la tranquilidad de tus colaboradores con los\n                  <strong>lideres en Seguros de vida del Ecuador!</strong>\n                </h3>\n              </div>\n            </div>\n          </div>\n        </ngx-slick-carousel>\n      </div>\n    </div>\n    <div\n      class=\"h-100 d-flex bg-white justify-content-center align-items-center col-md-12 col-lg-8\"\n    >\n      <div class=\"mx-auto app-login-box col-sm-12 col-md-10 col-lg-9\">\n        <form [formGroup]=\"loginForm\" class=\"col-lg-6 offset-lg-3\">\n          <div class=\"row\">\n            <div class=\"col-md-12 text-center\">\n              <img\n                class=\"logo-seguro-size\"\n                alt=\"Logo Seguro\"\n                src=\"/assets/images/logo_pichincha.png\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-12 text-center\">\n              <mat-form-field class=\"w-100\" appearance=\"outline\">\n                <mat-label>Identificación</mat-label>\n                <input\n                  matInput\n                  placeholder=\"Identificación\"\n                  formControlName=\"identification\"\n                />\n                <mat-error\n                  *ngIf=\"loginForm.get('identification').hasError('required')\"\n                >\n                  Campo <strong>obligatorio.</strong>\n                </mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-md-12 text-center\">\n              <mat-form-field class=\"w-100\" appearance=\"outline\">\n                <mat-label>Contraseña</mat-label>\n                <input\n                  matInput\n                  placeholder=\"Contraseña\"\n                  formControlName=\"password\"\n                  type=\"password\"\n                  #passwordField\n                />\n\n                <button\n                  mat-button\n                  matSuffix\n                  mat-icon-button\n                  class=\"mb-0 me-0 border-0 btn-transition btn btn-outline-primary\"\n                  type=\"button\"\n                  (click)=\"\n                    passwordField.type === 'password'\n                      ? (passwordField.type = 'text')\n                      : (passwordField.type = 'password')\n                  \"\n                >\n                  <mat-icon *ngIf=\"passwordField.type === 'password'\" matSuffix\n                    >visibility_off</mat-icon\n                  >\n\n                  <mat-icon *ngIf=\"passwordField.type === 'text'\" matSuffix\n                    >visibility</mat-icon\n                  >\n                </button>\n\n                <mat-error\n                  *ngIf=\"loginForm.get('password').hasError('required')\"\n                >\n                  Campo <strong>obligatorio.</strong>\n                </mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-12 text-center\">\n              <div class=\"ms-auto\">\n                <a [routerLink]=\"\" class=\"fw-normal btn-lg btn btn-link\"\n                  >¿Olvidaste tu contraseña?</a\n                >\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div class=\"checkbox\">\n                <label class=\"form-label\">\n                  <input type=\"checkbox\" [checked]=\"null\" (change)=\"(null)\" />\n                  Mantenme <strong>conectado</strong>\n                </label>\n              </div>\n            </div>\n          </div>\n          <div class=\"d-grid gap-2\">\n            <button\n              [disabled]=\"loginForm.invalid\"\n              (click)=\"signIn()\"\n              mat-raised-button\n              class=\"btn-shadow\"\n              color=\"primary\"\n            >\n              Iniciar Sesión\n            </button>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-12 text-center\">\n              <div class=\"ms-auto\">\n                <h6 class=\"mb-0 py-2\">\n                  ¿No tienes una cuenta?\n                  <a [routerLink]=\"\" class=\"text-primary\">REGISTRATE</a>\n                </h6>\n              </div>\n            </div>\n          </div>\n          <div class=\"row pt-4\">\n            <div class=\"class-md-12 text-center\">\n              <div\n                class=\"input-group justify-content-center align-items-center gap-4\"\n              >\n                <label class=\"\"> Iniciar sesión con: </label>\n                <button\n                  class=\"input-group-addonmb-2 me-2 btn-icon btn-shadow btn-outline-2x btn btn-outline-info border-0\"\n                >\n                  <i class=\"fa fa-windows btn-icon-wrapper\"> </i>Active\n                  Directory\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { RouterModule } from \"@angular/router\";\nimport { loginRoutes } from \"./login.routing\";\nimport { SharedModule } from \"src/app/shared/shared.module\";\nimport { LoginComponent } from \"./login.component\";\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [CommonModule, RouterModule.forChild(loginRoutes), SharedModule],\n})\nexport class LoginModule {}\n","import { Route } from \"@angular/router\";\r\nimport { LoginComponent } from \"./login.component\";\r\n\r\nexport const loginRoutes: Route[] = [\r\n  {\r\n    path: \"\",\r\n    component: LoginComponent,\r\n  },\r\n];\r\n"],"names":[],"sourceRoot":"webpack:///"}